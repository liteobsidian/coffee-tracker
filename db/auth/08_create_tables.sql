-- Table: stat.type_report
-- DROP TABLE IF EXISTS stat.type_report;
CREATE TABLE stat.type_report (
  id bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
  name text COLLATE pg_catalog."default" NOT NULL,
  deleted boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT type_report_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE stat.type_report OWNER to stat;

COMMENT ON TABLE stat.type_report IS 'Тип отчетности';
COMMENT ON COLUMN stat.type_report.id IS 'Ид. типа отчетности';
COMMENT ON COLUMN stat.type_report.name IS 'Наименование типа отчетности';
COMMENT ON COLUMN stat.type_report.deleted IS 'Признак удаления записи шаблона';
COMMENT ON COLUMN stat.type_report.created_at IS 'Дата записи';
COMMENT ON COLUMN stat.type_report.deleted_at IS 'Дата удаления';
COMMENT ON COLUMN stat.type_report.name IS 'Наименование шаблона';

-- DROP Rule delete_stat_type_report ON stat.type_report;
CREATE OR REPLACE RULE delete_stat_type_report AS
    ON DELETE TO stat.type_report
    DO INSTEAD
(UPDATE stat.type_report SET deleted = true, deleted_at = now()
  WHERE (type_report.id = old.id));
-- DROP Rule update_stat_type_report ON stat.type_report;
CREATE OR REPLACE RULE update_stat_type_report AS
    ON UPDATE TO stat.type_report
    DO INSTEAD NOTHING;


-- Table: stat.template
-- DROP TABLE IF EXISTS stat.template;
CREATE TABLE stat.template (
  id bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
  type_report_id bigint,
  name text COLLATE pg_catalog."default" NOT NULL,
  schema_validation jsonb,
  template_file text COLLATE pg_catalog."default" NOT NULL,
  deleted boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  period date,
  e_date date,
  CONSTRAINT template_pkey PRIMARY KEY (id),
  CONSTRAINT template_type_report_id_fkey FOREIGN KEY (type_report_id)
        REFERENCES stat.type_report (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE stat.template OWNER to stat;

COMMENT ON TABLE stat.template IS 'Шаблон';
COMMENT ON COLUMN stat.template.id IS 'Ид. шаблона';
COMMENT ON COLUMN stat.template.type_report_id IS 'Ид. типа/вида отчетности';
COMMENT ON COLUMN stat.template.name IS 'Наименование шаблона';
COMMENT ON COLUMN stat.template.schema_validation IS 'Схема валидации полей в таблице шаблона';
COMMENT ON COLUMN stat.template.template_file IS 'Имя файл шаблона в формате xlsx';
COMMENT ON COLUMN stat.template.deleted IS 'Признак удаления записи шаблона';
COMMENT ON COLUMN stat.template.created_at IS 'Дата записи';
COMMENT ON COLUMN stat.template.deleted_at IS 'Дата удаления';
COMMENT ON COLUMN stat.template.name IS 'Наименование шаблона';

-- DROP Rule delete_stat_template ON stat.template;
CREATE OR REPLACE RULE delete_stat_template AS
    ON DELETE TO stat.template
    DO INSTEAD
(UPDATE stat.template SET deleted = true, deleted_at = now()
  WHERE (template.id = old.id));
-- DROP Rule update_stat_template ON stat.template;
-- CREATE OR REPLACE RULE update_stat_template AS
--     ON UPDATE TO stat.template
--     DO INSTEAD NOTHING;

--	

ALTER TABLE template
ADD CONSTRAINT template_unique_constraint_type_period UNIQUE (type_report_id, period);

ALTER TABLE template
 ADD CONSTRAINT template_unique_constraint_id_period UNIQUE (id, period);


-- Table: stat.input_file
-- DROP TABLE IF EXISTS stat.input_file;
CREATE TABLE stat.input_file (
  id bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
  template_id bigint,
  organization_id bigint,
  division_id bigint,
  uuid uuid NOT NULL,
  name text NOT NULL,
  path text NOT NULL,
  period date NOT NULL,
  status jsonb NOT NULL DEFAULT '{"validation":false, "handled":false}'::jsonb,
  auth_user_id bigint,
  deleted boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT input_file_pkey PRIMARY KEY (id),
  CONSTRAINT input_file_organization_id_fkey FOREIGN KEY (organization_id)
        REFERENCES stat.organization (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
  CONSTRAINT input_file_division_id_fkey FOREIGN KEY (division_id)
        REFERENCES stat.division (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
  CONSTRAINT input_file_template_id_fkey FOREIGN KEY (template_id)
        REFERENCES stat.template (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
  CONSTRAINT input_file_auth_user_id_fkey FOREIGN KEY (auth_user_id)
        REFERENCES stat.auth_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE stat.input_file OWNER to stat;

ALTER TABLE stat.input_file
    ADD COLUMN protocol_errors jsonb;
COMMENT ON COLUMN stat.input_file.protocol_errors
    IS 'Протокол ошибок валидации данных';

ALTER TABLE stat.input_file
    ADD COLUMN data jsonb;
COMMENT ON COLUMN stat.input_file.data
    IS 'Данные табличной части загруженного файла';

COMMENT ON TABLE stat.input_file IS 'Файл входящий на проверку';
COMMENT ON COLUMN stat.input_file.id IS 'Ид. фходящего файла';
COMMENT ON COLUMN stat.input_file.template_id IS 'Ид. шаблона входящего файла';
COMMENT ON COLUMN stat.input_file.organization_id IS 'Ид. организации';
COMMENT ON COLUMN stat.input_file.division_id IS 'Ид. подразделения';
COMMENT ON COLUMN stat.input_file.uuid IS 'UUID присвоенное фходящем файлу в системе';
COMMENT ON COLUMN stat.input_file.name IS 'Наименование оригинала входящего файла';
COMMENT ON COLUMN stat.input_file.path IS 'Путь хранения зарженного файла в системе';
COMMENT ON COLUMN stat.input_file.period IS 'Дата расчетного периода ';
COMMENT ON COLUMN stat.input_file.status IS 'Статус проверки файла validation=true - валидация пройдена успешно, handled=true ручная операция разрешения на отправку файла';
COMMENT ON COLUMN stat.input_file.auth_user_id IS 'Ид.пользователя загрузившего файл';
COMMENT ON COLUMN stat.input_file.deleted IS 'Признак удаления записи шаблона';
COMMENT ON COLUMN stat.input_file.created_at IS 'Дата записи';
COMMENT ON COLUMN stat.input_file.deleted_at IS 'Дата удаления';

-- DROP Rule delete_stat_input_file ON stat.input_file;
CREATE OR REPLACE RULE delete_stat_input_file AS
    ON DELETE TO stat.input_file
    DO INSTEAD
(UPDATE stat.input_file SET deleted = true, deleted_at = now()
  WHERE (input_file.id = old.id) RETURNING old.id);

// ИЛИ
CREATE OR REPLACE RULE delete_stat_input_file AS
    ON DELETE TO stat.input_file
    DO INSTEAD
(UPDATE stat.input_file SET deleted = true, deleted_at = now()
  WHERE (input_file.id = old.id);
select id FROM input_file where input_file.id = old.id);


  
-- DROP Rule update_stat_input_file ON stat.input_file;
CREATE OR REPLACE RULE update_stat_input_file AS
    ON UPDATE TO stat.input_file
    DO INSTEAD NOTHING;

CREATE INDEX stat_input_file_uuid_btree_idx
    ON stat.input_file USING btree
    (uuid ASC NULLS LAST)
    TABLESPACE pg_default;

COMMENT ON INDEX stat.stat_input_file_uuid_btree_idx
    IS 'Индекс для поиска по уникальному UUID';


ALTER TABLE input_file 
ADD CONSTRAINT input_file_template_period_fkey 
FOREIGN KEY (template_id, period)
REFERENCES stat.template (id, period) MATCH SIMPLE
ON UPDATE NO ACTION
ON DELETE NO ACTION;


-- Table: stat.input_rows
-- DROP TABLE IF EXISTS stat.input_rows;
CREATE TABLE stat.input_row (
  id bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
  input_file_id bigint,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  status boolean DEFAULT false,
  validation jsonb NOT NULL DEFAULT '{}'::jsonb,
  deleted boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT input_row_pkey PRIMARY KEY (id),
  CONSTRAINT input_row_input_file_id_fkey FOREIGN KEY (input_file_id)
        REFERENCES stat.input_file (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE stat.input_row OWNER to stat;

COMMENT ON TABLE stat.input_row IS 'Строка input файла';
COMMENT ON COLUMN stat.input_row.id IS 'Ид.строки фходящего файла';
COMMENT ON COLUMN stat.input_row.data IS 'Данные строки входящего файла';
COMMENT ON COLUMN stat.input_row.status IS 'Статус успешной валидации всех полей строки true/false';
COMMENT ON COLUMN stat.input_row.validation IS 'Расшифровка значений валидации полей по строке';
COMMENT ON COLUMN stat.input_row.deleted IS 'Признак удаления строки';
COMMENT ON COLUMN stat.input_row.created_at IS 'Дата записи';
COMMENT ON COLUMN stat.input_row.deleted_at IS 'Дата удаления';

-- DROP Rule delete_stat_input_row ON stat.input_row;
CREATE OR REPLACE RULE delete_stat_input_row AS
    ON DELETE TO stat.input_row
    DO INSTEAD
(UPDATE stat.input_row SET deleted = true, deleted_at = now()
  WHERE (input_row.id = old.id));
-- DROP Rule update_stat_input_row ON stat.input_row;
CREATE OR REPLACE RULE update_stat_input_row AS
    ON UPDATE TO stat.input_row
    DO INSTEAD NOTHING;

-- Table: stat.output_file
-- DROP TABLE IF EXISTS stat.output_file;
CREATE TABLE stat.output_file (
  id bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
  template_id bigint,
  uuid uuid NOT NULL,
  name text NOT NULL,
  path text NOT NULL,
  period date NOT NULL,
  auth_user_id bigint,
  deleted boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT output_file_pkey PRIMARY KEY (id),
  CONSTRAINT output_file_template_id_fkey FOREIGN KEY (template_id)
        REFERENCES stat.template (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION,
  CONSTRAINT input_file_auth_user_id_fkey FOREIGN KEY (auth_user_id)
        REFERENCES stat.auth_user (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE stat.output_file OWNER to stat;

COMMENT ON TABLE stat.output_file IS 'Файл исходящий, сформированный на основании группы входящих файлов за период';
COMMENT ON COLUMN stat.output_file.id IS 'Ид. записи';
COMMENT ON COLUMN stat.output_file.template_id IS 'Ид. шаблона файла';
COMMENT ON COLUMN stat.output_file.name IS 'Наименование исходящего файла при отправке клиенту';
COMMENT ON COLUMN stat.output_file.uuid IS 'UUID исходящего файла в системе';
COMMENT ON COLUMN stat.output_file.path IS 'Путь хранения файла в системе';
COMMENT ON COLUMN stat.output_file.period IS 'Дата расчетного периода ';
COMMENT ON COLUMN stat.output_file.auth_user_id IS 'Ид.пользователя сформировавшего файл';
COMMENT ON COLUMN stat.output_file.deleted IS 'Признак удаления записи шаблона';
COMMENT ON COLUMN stat.output_file.created_at IS 'Дата записи';
COMMENT ON COLUMN stat.output_file.deleted_at IS 'Дата удаления';

-- DROP Rule delete_stat_output_file ON stat.output_file;
CREATE OR REPLACE RULE delete_stat_output_file AS
    ON DELETE TO stat.output_file
    DO INSTEAD
(UPDATE stat.output_file SET deleted = true, deleted_at = now()
  WHERE (output_file.id = old.id));
-- DROP Rule update_stat_output_file ON stat.output_file;
CREATE OR REPLACE RULE update_stat_output_file AS
    ON UPDATE TO stat.output_file
    DO INSTEAD NOTHING;

CREATE INDEX stat_output_file_uuid_btree_idx
    ON stat.output_file USING btree
    (uuid ASC NULLS LAST)
    TABLESPACE pg_default;

COMMENT ON INDEX stat.stat_output_file_uuid_btree_idx
    IS 'Индекс для поиска по уникальному UUID';

-- Table: stat.output_row
-- DROP TABLE IF EXISTS stat.output_row;
CREATE TABLE stat.output_row (
  id bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
  output_file_id bigint,
  data jsonb NOT NULL DEFAULT '{}'::jsonb,
  status boolean DEFAULT false,
  validation jsonb NOT NULL DEFAULT '{}'::jsonb,
  deleted boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT output_row_pkey PRIMARY KEY (id),
  CONSTRAINT output_row_output_file_id_fkey FOREIGN KEY (output_file_id)
        REFERENCES stat.output_file (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE stat.output_row OWNER to stat;

COMMENT ON TABLE stat.output_row IS 'Строка output файла';
COMMENT ON COLUMN stat.output_row.id IS 'Ид.строки файла';
COMMENT ON COLUMN stat.output_row.data IS 'Данные строки входящего файла';
COMMENT ON COLUMN stat.output_row.status IS 'Статус успешной валидации всех полей строки от системы контроля true/false';
COMMENT ON COLUMN stat.output_row.validation IS 'Расшифровка значений валидации полей по строке';
COMMENT ON COLUMN stat.output_row.deleted IS 'Признак удаления строки';
COMMENT ON COLUMN stat.output_row.created_at IS 'Дата записи';
COMMENT ON COLUMN stat.output_row.deleted_at IS 'Дата удаления';

-- DROP Rule delete_stat_output_row ON stat.output_row;
CREATE OR REPLACE RULE delete_stat_output_row AS
    ON DELETE TO stat.output_row
    DO INSTEAD
(UPDATE stat.output_row SET deleted = true, deleted_at = now()
  WHERE (output_row.id = old.id));
-- DROP Rule update_stat_output_row ON stat.output_row;
CREATE OR REPLACE RULE update_stat_output_row AS
    ON UPDATE TO stat.output_row
    DO INSTEAD NOTHING;


-- Table: stat.finance_source
-- DROP TABLE IF EXISTS stat.finance_source;
CREATE TABLE stat.finance_source (
  id bigint  NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
  name text COLLATE pg_catalog."default" NOT NULL,
  b_date date NOT NULL,
  e_date date DEFAULT NULL CONSTRAINT positiv_date CHECK (b_date < e_date or e_date = null ),
  deleted boolean DEFAULT false,
  created_at timestamp with time zone NOT NULL DEFAULT now(),
  deleted_at timestamp with time zone,
  CONSTRAINT finance_source_pkey PRIMARY KEY (id)
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;
ALTER TABLE stat.finance_source OWNER to stat;

COMMENT ON TABLE stat.finance_source IS 'Источники финансирования';
COMMENT ON COLUMN stat.finance_source.id IS 'Ид. источника финансирования';
COMMENT ON COLUMN stat.finance_source.name IS 'Наименование источника финансирования';
COMMENT ON COLUMN stat.finance_source.b_date IS 'Начальная дата действия источника финансирования';
COMMENT ON COLUMN stat.finance_source.e_date IS 'Конечная  дата действия источника финансирования';
COMMENT ON COLUMN stat.finance_source.deleted IS 'Признак удаления записи шаблона';
COMMENT ON COLUMN stat.finance_source.created_at IS 'Дата записи';
COMMENT ON COLUMN stat.finance_source.deleted_at IS 'Дата удаления';


-- DROP Rule delete_stat_finance_source ON stat.finance_source;
CREATE OR REPLACE RULE delete_stat_finance_source AS
    ON DELETE TO stat.finance_source
    DO INSTEAD
(UPDATE stat.finance_source SET deleted = true, deleted_at = now()
  WHERE (finance_source.id = old.id));

-- DROP Rule update_stat_finance_source ON stat.finance_source;
-- CREATE OR REPLACE RULE update_stat_finance_source AS
--     ON UPDATE TO stat.finance_source
--     DO INSTEAD ;

CREATE INDEX ON stat.finance_source ((lower(name)));