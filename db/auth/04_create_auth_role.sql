-- Table: stat.auth_role

-- DROP TABLE stat.auth_role;

CREATE TABLE stat.auth_role
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    name character varying(50) COLLATE pg_catalog."default" NOT NULL,
    organization_id bigint,
    CONSTRAINT auth_role_pkey PRIMARY KEY (id),
    CONSTRAINT auth_role_organization_id_fkey FOREIGN KEY (organization_id)
        REFERENCES stat.organization (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
)
WITH (
    OIDS = FALSE
)
TABLESPACE pg_default;

ALTER TABLE stat.auth_role
    OWNER to stat;

COMMENT ON TABLE stat.auth_role
    IS 'Список ролей пользователей в программе';

COMMENT ON COLUMN stat.auth_role.id
    IS 'Уникальный ключ (id) для родей пользователя';

COMMENT ON COLUMN stat.auth_role.name
    IS 'Наименование роли пользователя';

COMMENT ON COLUMN stat.auth_role.organization_id
    IS 'Ссылка на таблицу организаций, внутри которых действуют эти роли';
-- Index: auth_role_name_btree_idx

-- DROP INDEX stat.auth_role_name_btree_idx;

CREATE INDEX auth_role_name_btree_idx
    ON stat.auth_role USING btree
    (stat.normalize_string(name::text) COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;

COMMENT ON INDEX stat.auth_role_name_btree_idx
    IS 'Индекс для поиска по полному совпадению наименования в таблице ролей пользователя';
-- Index: auth_role_name_gin_idx

-- DROP INDEX stat.auth_role_name_gin_idx;

CREATE INDEX auth_role_name_gin_idx
    ON stat.auth_role USING gin
    (stat.normalize_string(name::text) COLLATE pg_catalog."default" gin_trgm_ops)
    TABLESPACE pg_default;

COMMENT ON INDEX stat.auth_role_name_gin_idx
    IS 'Индекс для поиска по вхождению подстроки в наименование в таблице ролей пользователя';
-- Index: auth_role_page_navigation_btree_idx

-- DROP INDEX stat.auth_role_page_navigation_btree_idx;

CREATE INDEX auth_role_page_navigation_btree_idx
    ON stat.auth_role USING btree
    (stat.normalize_index_expression(name::text, id, 50) COLLATE pg_catalog."default" ASC NULLS LAST)
    TABLESPACE pg_default;