pipeline {
  environment {
    registry = "harbor.medsoft.su/quasar_farm/"
    registryCredential = 'jenkins-harbor'
    dockerImage = ''
    buildImage = ''
    telegaNotify = true
  }

  agent {label 'master_node'}

  options {
    buildDiscarder(logRotator(numToKeepStr: '10', artifactNumToKeepStr: '10'))
    timestamps()
	ansiColor('xterm')
  }


  stages {
    stage('Init & Workspace Cleanup') {
             steps {
                 step([$class: 'WsCleanup'])
             }
    }
    stage('Build') {
         environment {
            // Override HOME to WORKSPACE
            HOME = "${WORKSPACE}" // или HOME = '.'
            // or override default cache directory (~/.npm)
            // NPM_CONFIG_CACHE = "${WORKSPACE}/.npm"
          }
          steps {
              script {
                if (telegaNotify == true) { telegramSend(message: 'Начало сборки Квазар.Стат (stat-app)', chatId: -1001206841025) }
                git branch: 'develop', credentialsId: 'jenkins-ssh-hippo', url: 'ssh://git@hippo.medsoft.su:2001/farm/stat-app.git'
                env.APP_VERSION = sh(script:'cat ./front/package.json | grep \"version\" | awk -F: \'{ print $2 }\' | sed \'s/[\",]//g\'', returnStdout: true).trim()
                env.APP_COMMIT_NUMBER = sh(script: 'git rev-list --count HEAD', returnStdout: true).trim()
                env.APP_COMMIT_HASH = sh(returnStdout: true, script: 'git rev-parse HEAD').trim()
                env.APP_COMMIT_MESSAGE = sh(returnStdout: true, script: 'git log -1 --pretty=%B').trim()
                echo "----- STAT APP -------"
                echo "\033[35mversion:\033[0m $APP_VERSION"
                echo "\033[35mcommit #:\033[0m $APP_COMMIT_NUMBER"
                echo "\033[35mcommit message:\033[0m $APP_COMMIT_MESSAGE"
                echo "-------------------------"
                dockerImage = docker.build("quasar_farm/stat-app", ".")
                docker.withRegistry( "http://${env.registry}", "${env.registryCredential}") {
                    dockerImage.push('latest')
                }
                if (telegaNotify == true) { telegramSend(message: 'Сборка проекта Квазар.Стат (stat-app) завершена', chatId: -1001206841025) }
              }
          }
      }
      stage('Deploy') {
        steps {
          script {
            if (telegaNotify == true) { telegramSend(message: 'Начато развертывание проекта Квазар.Стат (stat-app)', chatId: -1001206841025) }
            // sh 'ssh  medsoft@10.3.0.36 \'cd /opt/docker-files && docker-compose pull && docker-compose up -d\''
            sh '''
                echo "---- docker-compose pull && docker-compose up -------"
                cd /opt/docker-files/stat-app/
                docker-compose -f ./stat-app.prod.yaml pull && docker-compose -f ./stat-app.prod.yaml up -d
            '''
            if (telegaNotify == true) { telegramSend(message: 'Проект Квазар.Стат (stat-app) развернут на 10.3.0.36', chatId: -1001206841025) }
          }
        }
      }
  }
}
